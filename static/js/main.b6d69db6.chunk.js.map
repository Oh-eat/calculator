{"version":3,"sources":["lib/adjustNumber.js","components/Present.js","components/Calculated.js","components/Display.js","components/Button.js","components/Number.js","components/Pad.js","App.js","components/hooks/useHook.js","serviceWorker.js","index.js","reducers/index.js"],"names":["number","target","toString","includes","index","indexOf","count","length","toFixed","PresentBlock","styled","div","Present","left","operator","right","error","CalculatedBlock","Calculated","calculated","DisplayBlock","Display","state","ButtonBlock","props","area","Button","text","onClick","NumberBlock","Number","handleNumberClick","handleDotClick","map","key","PadBlock","Pad","handleOperatorClick","handleBackClick","handleClearClick","handleCalculateClick","Wrapper","App","useReducer","reducer","initialState","dispatch","useCallback","addNumber","addDot","setOperator","backspace","initialize","calculate","useHook","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","ADD_NUMBER","ADD_DOT","SET_OPERATOR","BACKSPACE","CALCULATE","INITIALIZE","type","action","targetA","parsed","parseFloat","parsedNew","nextTargetA","targetB","nextTargetB","targetC","value","nextValue","slice","computed","eval","isFinite","adjustNumber","e"],"mappings":"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","file":"static/js/main.b6d69db6.chunk.js","sourcesContent":["export default function(number) {\r\n  const target = number.toString();\r\n  if (!target.includes(\".\")) return target;\r\n  const index = target.indexOf(\".\");\r\n  const count = target.length - 1 - index;\r\n  return count > 5 ? number.toFixed(5) : number.toFixed(count);\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PresentBlock = styled.div`\r\n  width: 90%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: calc(65%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  font-size: 1.25rem;\r\n  overflow: hidden;\r\n`;\r\n\r\nfunction Present({ left, operator, right, error }) {\r\n  return (\r\n    <PresentBlock>\r\n      {error && error}\r\n      {!error &&\r\n        `${left}${operator === \"\" ? \"\" : ` ${operator}`}${\r\n          right === \"\" ? \"\" : ` ${right}`\r\n        }`}\r\n    </PresentBlock>\r\n  );\r\n}\r\n\r\nexport default Present;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CalculatedBlock = styled.div`\r\n  width: 90%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: calc(35%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nfunction Calculated({ calculated, error }) {\r\n  return <CalculatedBlock>{!error && calculated}</CalculatedBlock>;\r\n}\r\n\r\nexport default Calculated;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Present from \"./Present\";\r\nimport Calculated from \"./Calculated\";\r\n\r\nconst DisplayBlock = styled.div`\r\n  width: 15rem;\r\n  height: 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgb(110, 110, 110);\r\n  color: white;\r\n`;\r\n\r\nfunction Display({ state }) {\r\n  const { left, operator, right, calculated, error } = state;\r\n  return (\r\n    <DisplayBlock>\r\n      <Present left={left} operator={operator} right={right} error={error} />\r\n      <Calculated calculated={calculated} error={error} />\r\n    </DisplayBlock>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonBlock = styled.div`\r\n  grid-area: ${props => props.area};\r\n  user-select: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  background: rgb(60, 60, 60);\r\n  color: white;\r\n  transition: all 0.25s;\r\n\r\n  &:hover {\r\n    background: rgb(236, 236, 236);\r\n    color: black;\r\n  }\r\n`;\r\n\r\nfunction Button({ area, text, onClick }) {\r\n  return (\r\n    <ButtonBlock onClick={onClick} area={area}>\r\n      {text}\r\n    </ButtonBlock>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst NumberBlock = styled.div`\r\n  grid-area: ${props => props.area};\r\n  width: calc(15rem / 4 * 3);\r\n  height: calc(15rem / 4 * 5 / 5 * 4);\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, 1fr);\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nfunction Number({ area, handleNumberClick, handleDotClick }) {\r\n  return (\r\n    <NumberBlock area={area}>\r\n      {[7, 8, 9, 4, 5, 6, 1, 2, 3]\r\n        .map(number => `${number}`)\r\n        .map(number => (\r\n          <Button\r\n            key={number}\r\n            text={number}\r\n            onClick={() => handleNumberClick(number)}\r\n          />\r\n        ))}\r\n      <Button text=\"0\" area=\"4/1/4/3\" onClick={() => handleNumberClick(0)} />\r\n      <Button text=\".\" onClick={handleDotClick} />\r\n    </NumberBlock>\r\n  );\r\n}\r\n\r\nexport default Number;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\nimport Number from \"./Number\";\r\n\r\nconst PadBlock = styled.div`\r\n  width: 15rem;\r\n  height: calc(15rem * 1.25);\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  grid-template-areas:\r\n    \"plus minus multiple divide\"\r\n    \"number number number back\"\r\n    \"number number number clear\"\r\n    \"number number number equal\"\r\n    \"number number number equal\";\r\n  align-items: center;\r\n  justify-items: center;\r\n`;\r\n\r\nfunction Pad({\r\n  handleNumberClick,\r\n  handleDotClick,\r\n  handleOperatorClick,\r\n  handleBackClick,\r\n  handleClearClick,\r\n  handleCalculateClick\r\n}) {\r\n  return (\r\n    <PadBlock>\r\n      <Button text=\"+\" area=\"plus\" onClick={() => handleOperatorClick(\"+\")} />\r\n      <Button text=\"-\" area=\"minus\" onClick={() => handleOperatorClick(\"-\")} />\r\n      <Button\r\n        text=\"*\"\r\n        area=\"multiple\"\r\n        onClick={() => handleOperatorClick(\"*\")}\r\n      />\r\n      <Button text=\"/\" area=\"divide\" onClick={() => handleOperatorClick(\"/\")} />\r\n      <Number\r\n        area=\"number\"\r\n        handleNumberClick={handleNumberClick}\r\n        handleDotClick={handleDotClick}\r\n      />\r\n      <Button text=\"←\" area=\"back\" onClick={handleBackClick} />\r\n      <Button text=\"C\" area=\"clear\" onClick={handleClearClick} />\r\n      <Button text=\"=\" area=\"equal\" onClick={handleCalculateClick} />\r\n    </PadBlock>\r\n  );\r\n}\r\n\r\nexport default Pad;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Display from \"./components/Display\";\nimport Pad from \"./components/Pad\";\nimport useHook from \"./components/hooks/useHook\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  const [\n    state,\n    handleNumberClick,\n    handleDotClick,\n    handleOperatorClick,\n    handleBackClick,\n    handleClearClick,\n    handleCalculateClick\n  ] = useHook();\n\n  return (\n    <Wrapper>\n      <Display state={state} />\n      <Pad\n        handleNumberClick={handleNumberClick}\n        handleDotClick={handleDotClick}\n        handleOperatorClick={handleOperatorClick}\n        handleBackClick={handleBackClick}\n        handleClearClick={handleClearClick}\n        handleCalculateClick={handleCalculateClick}\n      />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { useReducer, useCallback } from \"react\";\r\nimport {\r\n  reducer,\r\n  initialState,\r\n  addNumber,\r\n  addDot,\r\n  setOperator,\r\n  backspace,\r\n  initialize,\r\n  calculate\r\n} from \"../../reducers\";\r\n\r\nexport default function useHook() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const handleNumberClick = useCallback(\r\n    number => dispatch(addNumber(number)),\r\n    []\r\n  );\r\n  const handleDotClick = useCallback(() => dispatch(addDot()), []);\r\n  const handleOperatorClick = useCallback(\r\n    operator => dispatch(setOperator(operator)),\r\n    []\r\n  );\r\n  const handleBackClick = useCallback(() => dispatch(backspace()), []);\r\n  const handleClearClick = useCallback(() => dispatch(initialize()), []);\r\n  const handleCalculateClick = useCallback(() => dispatch(calculate()), []);\r\n  return [\r\n    state,\r\n    handleNumberClick,\r\n    handleDotClick,\r\n    handleOperatorClick,\r\n    handleBackClick,\r\n    handleClearClick,\r\n    handleCalculateClick\r\n  ];\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import adjustNumber from \"../lib/adjustNumber\";\r\n\r\nconst ADD_NUMBER = \"ADD_NUMBER\";\r\nconst ADD_DOT = \"ADD_DOT\";\r\nconst SET_OPERATOR = \"SET_OPERATOR\";\r\nconst BACKSPACE = \"BACKSPACE\";\r\nconst CALCULATE = \"CALCULATE\";\r\nconst INITIALIZE = \"INITIALIZE\";\r\n\r\nexport const addNumber = number => ({ type: ADD_NUMBER, number });\r\nexport const addDot = () => ({ type: ADD_DOT });\r\nexport const setOperator = operator => ({ type: SET_OPERATOR, operator });\r\nexport const backspace = () => ({ type: BACKSPACE });\r\nexport const calculate = () => ({ type: CALCULATE });\r\nexport const initialize = () => ({ type: INITIALIZE });\r\n\r\nexport const initialState = {\r\n  left: \"0\",\r\n  operator: \"\",\r\n  right: \"\",\r\n  calculated: null,\r\n  error: null\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  switch (action.type) {\r\n    case ADD_NUMBER:\r\n      const targetA = state.operator === \"\" ? \"left\" : \"right\";\r\n      const parsed = parseFloat(state[targetA]);\r\n      const parsedNew = parseFloat(state[targetA] + action.number);\r\n      const nextTargetA =\r\n        parsed !== parsedNew\r\n          ? parsedNew\r\n          : state[targetA].includes(\".\")\r\n          ? state[targetA] + action.number\r\n          : parsed;\r\n      return { ...state, [targetA]: nextTargetA.toString(), error: null };\r\n\r\n    case ADD_DOT:\r\n      const targetB = state.operator === \"\" ? \"left\" : \"right\";\r\n      const nextTargetB = state[targetB].includes(\".\")\r\n        ? state[targetB]\r\n        : state[targetB] === \"\"\r\n        ? \"0.\"\r\n        : state[targetB] + \".\";\r\n      return { ...state, [targetB]: nextTargetB };\r\n\r\n    case SET_OPERATOR:\r\n      return state.left === \"\"\r\n        ? state\r\n        : { ...state, operator: action.operator };\r\n\r\n    case BACKSPACE:\r\n      const targetC =\r\n        state.right !== \"\"\r\n          ? \"right\"\r\n          : state.operator !== \"\"\r\n          ? \"operator\"\r\n          : \"left\";\r\n      const value = state[targetC];\r\n      const nextValue = value.slice(0, value.length - 1);\r\n      return { ...state, [targetC]: nextValue };\r\n\r\n    case CALCULATE:\r\n      const { left, operator, right } = state;\r\n      if (left === \"\" || operator === \"\" || right === \"\") return state;\r\n      try {\r\n        const computed = eval(`${left} ${operator} ${right}`);\r\n        const calculated = Number.isFinite(computed)\r\n          ? adjustNumber(computed)\r\n          : null;\r\n        return {\r\n          ...initialState,\r\n          left: calculated ? calculated.toString() : \"\",\r\n          calculated,\r\n          error: calculated ? null : \"ERROR\"\r\n        };\r\n      } catch (e) {\r\n        const error = e;\r\n        return { ...initialize, error };\r\n      }\r\n\r\n    case INITIALIZE:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"sourceRoot":""}